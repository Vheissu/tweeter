{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","resources/elements/tweet.js","/Users/Dwayne/tweeter/src/app.html","/Users/Dwayne/tweeter/src/styles.css","/Users/Dwayne/tweeter/src/resources/elements/tweet.html"],"names":["AVATAR","NAME","HANDLE","App","composedTweet","tweets","avatar","name","handle","text","createTweet","unshift","handleKeyPress","evt","keyCode","ths","preventDefault","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Tweet"],"mappings":";;;;;;;;;;;;;AAAA,MAAMA,SAAS,mEAAf;AACA,MAAMC,OAAO,cAAb;AACA,MAAMC,SAAS,cAAf;;MAEaC,cAAAA;AAKX,mBAAc;AAAA;;AAAA,WAHdC,aAGc,GAHE,IAGF;AAAA,WAFdC,MAEc,GAFL,EAEK;;AACZ,WAAKA,MAAL,GAAc,CACZ;AACEC,gBAAQ,6EADV;AAEEC,cAAM,YAFR;AAGEC,gBAAQ,aAHV;AAIEC,cAAM;AAJR,OADY,EAOZ;AACEH,gBAAQ,kGADV;AAEEC,cAAM,qBAFR;AAGEC,gBAAQ,kBAHV;AAIEC,cAAM;AAJR,OAPY,EAaZ;AACEH,gBAAQ,6EADV;AAEEC,cAAM,aAFR;AAGEC,gBAAQ,QAHV;AAIEC,cAAM;AAJR,OAbY,CAAd;AAoBD;;kBAEDC,qCAAc;AACZ,WAAKL,MAAL,CAAYM,OAAZ,CAAoB;AAClBL,gBAAQN,MADU;AAElBO,cAAMN,IAFY;AAGlBO,gBAAQN,MAHU;AAIlBO,cAAM,KAAKL;AAJO,OAApB;;AAOA,WAAKA,aAAL,GAAqB,IAArB;AACD;;kBAEDQ,yCAAeC,KAAK;AAClB,UAAIA,IAAIC,OAAJ,KAAgB,EAAhB,IAAsBC,IAAIX,aAA9B,EAA6C;AAC3C,aAAKM,WAAL;AACAG,YAAIG,cAAJ;AACD,OAHD,MAGO;AACL,eAAO,IAAP;AACD;AACF;;;;;;;;;;;oBClDY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBeb,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCAYY,gBAAAA;;;;;;;;;ACFb;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["const AVATAR = 'https://s3.amazonaws.com/uifaces/faces/twitter/sachagreif/128.jpg';\nconst NAME = 'John Citizen';\nconst HANDLE = '@johncitizen';\n\nexport class App {\n\n  composedTweet = null;\n  tweets = [];\n\n  constructor() {\n    this.tweets = [\n      {\n        avatar: 'https://pbs.twimg.com/profile_images/615392662233808896/EtxjSSKk_bigger.jpg',\n        name: 'TechCrunch',\n        handle: '@TechCrunch',\n        text: 'Naval Ravikant on China money into Silicon Valley: This trickle could become a tsunami'\n      },\n      {\n        avatar: 'https://pbs.twimg.com/profile_images/1332650890/strayfromthepath_flagtee_artworkslide_bigger.jpg',\n        name: 'Stray From The Path',\n        handle: '@strayfromdapath',\n        text: 'This week has been such shit. The only thing that\\'s made me happy is the impending STYG/Expire/KL tour and Shinsuke Nakamura entrance at NXT'\n      },\n      {\n        avatar: 'https://pbs.twimg.com/profile_images/668902554957316096/IpjBGyjC_bigger.jpg',\n        name: 'Chris Sacca',\n        handle: '@sacca',\n        text: 'I want a sports channel that is only highlights. 100% plays of the day/week/month. No shows. No narrative. Who\\'s with me?'\n      }\n    ];\n  }\n\n  createTweet() {\n    this.tweets.unshift({\n      avatar: AVATAR,\n      name: NAME,\n      handle: HANDLE,\n      text: this.composedTweet\n    });\n\n    this.composedTweet = null;\n  }\n\n  handleKeyPress(evt) {\n    if (evt.keyCode === 13 && ths.composedTweet) {\n      this.createTweet();\n      evt.preventDefault();\n    } else {\n      return true;\n    }\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {bindable} from 'aurelia-framework';\n\nexport class Tweet {\n  @bindable tweet;\n}\n\n",null,null,null],"sourceRoot":"../src"}